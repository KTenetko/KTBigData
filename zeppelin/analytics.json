{"paragraphs":[{"text":"%md\n##Analysis of HeadHunter Resumes\n\nby Kristina Tenetko\n\n\n","dateUpdated":"2016-12-11T01:19:59+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481327082845_-1808383520","id":"20161210-034442_773300941","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Analysis of HeadHunter Resumes</h2>\n<p>by Kristina Tenetko</p>\n"},"dateCreated":"2016-12-10T03:44:42+0400","dateStarted":"2016-12-11T01:19:50+0400","dateFinished":"2016-12-11T01:19:50+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:186"},{"text":"%angular\n<script type=\"text/javascript\">\n\n    $(function () {\n        if (typeof Highcharts == \"undefined\") {\n            $.getScript(\"http://code.highcharts.com/highcharts.js\")\n              .done(function( script, textStatus ) {\n                console.log( \"load http://code.highcharts.com/highcharts.js \" + textStatus );\n              })\n              .fail(function(jqxhr, settings, exception ) {\n                 console.log(\"load http://code.highcharts.com/highcharts.js \" + exception);\n              });\n        } else {\n            console.log(\"highcharts already loaded\");\n        }\n    });\n</script>\n<script type=\"text/javascript\">\n\n    $(function () {\n            $.getScript(\"https://code.highcharts.com/modules/drilldown.js\")\n              .done(function( script, textStatus ) {\n                console.log( \"load https://code.highcharts.com/modules/drilldown.js \" + textStatus );\n              })\n              .fail(function(jqxhr, settings, exception ) {\n                 console.log(\"load https://code.highcharts.com/modules/drilldown.js \" + exception);\n              });\n    });\n</script>","dateUpdated":"2016-12-17T02:16:36+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481499231761_-2102929069","id":"20161212-033351_1932048549","result":{"code":"SUCCESS","type":"ANGULAR","msg":"<script type=\"text/javascript\">\n\n    $(function () {\n        if (typeof Highcharts == \"undefined\") {\n            $.getScript(\"http://code.highcharts.com/highcharts.js\")\n              .done(function( script, textStatus ) {\n                console.log( \"load http://code.highcharts.com/highcharts.js \" + textStatus );\n              })\n              .fail(function(jqxhr, settings, exception ) {\n                 console.log(\"load http://code.highcharts.com/highcharts.js \" + exception);\n              });\n        } else {\n            console.log(\"highcharts already loaded\");\n        }\n    });\n</script>\n<script type=\"text/javascript\">\n\n    $(function () {\n            $.getScript(\"https://code.highcharts.com/modules/drilldown.js\")\n              .done(function( script, textStatus ) {\n                console.log( \"load https://code.highcharts.com/modules/drilldown.js \" + textStatus );\n              })\n              .fail(function(jqxhr, settings, exception ) {\n                 console.log(\"load https://code.highcharts.com/modules/drilldown.js \" + exception);\n              });\n    });\n</script>"},"dateCreated":"2016-12-12T03:33:51+0400","dateStarted":"2016-12-16T02:33:16+0400","dateFinished":"2016-12-16T02:33:18+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:187"},{"text":"import org.bson.Document\nimport com.mongodb.spark._\nimport com.mongodb.spark.config._\nimport com.knockdata.spark.highcharts._\nimport com.knockdata.spark.highcharts.model._\nimport com.knockdata.spark.highcharts.base._\n\nval readConfig = ReadConfig(Map(\"uri\" -> \"mongodb://localhost:27017/KTHeadHunter.resumes\"))\n\nimport org.apache.spark.sql.SparkSession\nval sparkSession = SparkSession.builder().getOrCreate()\nval rdd = MongoSpark.load(sparkSession, readConfig)\n\n","dateUpdated":"2016-12-17T02:16:38+0400","config":{"colWidth":12,"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":false,"keys":[{"name":"age","index":0,"aggr":"sum"}],"values":[{"name":"count(1)","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"age","index":0,"aggr":"sum"},"yAxis":{"name":"count(1)","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false,"tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481327153979_-1796532925","id":"20161210-034553_481128989","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.bson.Document\n\nimport com.mongodb.spark._\n\nimport com.mongodb.spark.config._\n\nimport com.knockdata.spark.highcharts._\n\nimport com.knockdata.spark.highcharts.model._\n\nimport com.knockdata.spark.highcharts.base._\n\nreadConfig: com.mongodb.spark.config.ReadConfig.Self = ReadConfig(KTHeadHunter,resumes,Some(mongodb://localhost:27017/KTHeadHunter.resumes),1000,DefaultMongoPartitioner,Map(),15,ReadPreferenceConfig(primary,None),ReadConcernConfig(None),false)\n\nimport org.apache.spark.sql.SparkSession\n\nsparkSession: org.apache.spark.sql.SparkSession = org.apache.spark.sql.SparkSession@5c7d6341\n\nrdd: org.apache.spark.sql.DataFrame = [_id: struct<oid: string>, _progress: null ... 40 more fields]\n"},"dateCreated":"2016-12-10T03:45:53+0400","dateStarted":"2016-12-16T02:34:14+0400","dateFinished":"2016-12-16T02:34:44+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:188"},{"text":"rdd.createOrReplaceTempView(\"rdd\")\nval genderData  = spark.sql(\"SELECT gender.name as id, COUNT(gender.name) as count FROM rdd WHERE gender.name IN ('Мужской','Женский') GROUP BY gender.name\")\ngenderData.show()\n// val genderData = Seq( (\"Male\",5), (\"Female \",2) ).toDF(\"id\", \"count\")\n// genderData.show()\nval title = Title(\"\")\ntitle.fields += net.liftweb.json.JsonAST.JField(\"text\", JsonConversion.toJValue(\"Гендерное соотношение\"))\nval g = highcharts(genderData\n  .series(\"x\" -> \"id\", \"y\" -> \"count\",\"name\"->\"id\")\n  .orderBy(col(\"count\")))\n  .chart(Chart.pie)\n  .title(title.asInstanceOf[Title])","dateUpdated":"2016-12-16T03:56:21+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false,"tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481329493413_1920576213","id":"20161210-042453_2129322981","result":{"code":"SUCCESS","type":"TEXT","msg":"\ngenderData: org.apache.spark.sql.DataFrame = [id: string, count: bigint]\n+-------+------+\n|     id| count|\n+-------+------+\n|Женский| 19311|\n|Мужской|125388|\n+-------+------+\n\n\ntitle: com.knockdata.spark.highcharts.model.Title = com.knockdata.spark.highcharts.model.Title@61583753\n\nres7: title.fields.type = ListBuffer(JField(text,JString(Гендерное соотношение)))\n\ng: com.knockdata.spark.highcharts.model.Highcharts = com.knockdata.spark.highcharts.model.Highcharts@3e611e66\n"},"dateCreated":"2016-12-10T04:24:53+0400","dateStarted":"2016-12-16T02:43:45+0400","dateFinished":"2016-12-16T02:44:13+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189"},{"text":"val genderDataAge  = spark.sql(\"SELECT gender.name as id, COUNT(gender.name) as count FROM rdd WHERE gender.name IN ('Мужской','Женский') AND age < 22 GROUP BY gender.name union all ((SELECT gender.name as id, COUNT(gender.name) as count FROM rdd WHERE gender.name IN ('Мужской','Женский') AND age > 21 AND age < 27 GROUP BY gender.name) union all ((SELECT gender.name as id, COUNT(gender.name) as count FROM rdd WHERE gender.name IN ('Мужской','Женский') AND age > 26 AND age < 36 GROUP BY gender.name) union all ((SELECT gender.name as id, COUNT(gender.name) as count FROM rdd WHERE gender.name IN ('Мужской','Женский') AND age > 35 AND age < 46 GROUP BY gender.name) union all ((SELECT gender.name as id, COUNT(gender.name) as count FROM rdd WHERE gender.name IN ('Мужской','Женский') AND age > 45 AND age < 56 GROUP BY gender.name) union all (SELECT gender.name as id, COUNT(gender.name) as count FROM rdd WHERE gender.name IN ('Мужской','Женский') AND age > 55 GROUP BY gender.name)))))\")\n\ngenderDataAge.show()","dateUpdated":"2016-12-16T03:55:51+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481842020659_842568780","id":"20161216-024700_1905488066","result":{"code":"SUCCESS","type":"TEXT","msg":"\ngenderDataAge: org.apache.spark.sql.DataFrame = [id: string, count: bigint]\n+-------+-----+\n|     id|count|\n+-------+-----+\n|Женский|  527|\n|Мужской| 2815|\n|Женский| 4509|\n|Мужской|23307|\n|Женский| 9227|\n|Мужской|60592|\n|Женский| 3462|\n|Мужской|27616|\n|Женский| 1204|\n|Мужской| 8102|\n|Женский|  380|\n|Мужской| 2956|\n+-------+-----+\n\n"},"dateCreated":"2016-12-16T02:47:00+0400","dateStarted":"2016-12-16T03:23:43+0400","dateFinished":"2016-12-16T03:24:32+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:190"},{"text":"val educationLevelData  = spark.sql(\"SELECT education.level.id as id, COUNT(education.level.id) as count, first(education.level.name) as name FROM rdd GROUP BY education.level.id\")\neducationLevelData.show()\n","dateUpdated":"2016-12-16T04:10:02+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481846148878_1174304933","id":"20161216-035548_1391528932","result":{"code":"SUCCESS","type":"TEXT","msg":"\neducationLevelData: org.apache.spark.sql.DataFrame = [id: string, count: bigint ... 1 more field]\n+-----------------+------+-------------------+\n|               id| count|               name|\n+-----------------+------+-------------------+\n|           master|  7279|            Магистр|\n|        candidate|  1577|      Кандидат наук|\n|           higher|101560|             Высшее|\n|        secondary|  4194|            Среднее|\n|unfinished_higher| 20532|Неоконченное высшее|\n|         bachelor|  6260|           Бакалавр|\n|special_secondary| 14161|Среднее специальное|\n|           doctor|    59|        Доктор наук|\n+-----------------+------+-------------------+\n\n"},"dateCreated":"2016-12-16T03:55:48+0400","dateStarted":"2016-12-16T04:10:02+0400","dateFinished":"2016-12-16T04:10:27+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:191"},{"text":"val title = Title(\"\")\ntitle.fields += net.liftweb.json.JsonAST.JField(\"text\", JsonConversion.toJValue(\"Уровень образования\"))\nval g = highcharts(educationLevelData\n  .series(\"x\" -> \"name\", \"y\" -> \"count\",\"name\"->\"name\")\n  .orderBy(col(\"count\")))\n  .chart(Chart.pie)\n  .title(title.asInstanceOf[Title])","dateUpdated":"2016-12-16T04:10:48+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481846940856_-836262003","id":"20161216-040900_85839784","result":{"code":"SUCCESS","type":"TEXT","msg":"\ntitle: com.knockdata.spark.highcharts.model.Title = com.knockdata.spark.highcharts.model.Title@561e7bb1\n\nres50: title.fields.type = ListBuffer(JField(text,JString(Уровень образования)))\n\ng: com.knockdata.spark.highcharts.model.Highcharts = com.knockdata.spark.highcharts.model.Highcharts@7f39c0eb\n"},"dateCreated":"2016-12-16T04:09:00+0400","dateStarted":"2016-12-16T04:10:48+0400","dateFinished":"2016-12-16T04:11:11+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:192"},{"text":"g.plot()","dateUpdated":"2016-12-16T04:11:23+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481847076644_-522490791","id":"20161216-041116_1709441872","result":{"code":"SUCCESS","type":"ANGULAR","msg":"\n<div id=\"highcharts_fb9765d1-cd2b-4437-a21f-9bd920c530c5\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\n\n<script type=\"text/javascript\">\n$(function () {\nvar data = {\n  \"series\":[{\n    \"data\":[{\n      \"x\":\"Доктор наук\",\n      \"y\":59,\n      \"name\":\"Доктор наук\"\n    },{\n      \"x\":\"Кандидат наук\",\n      \"y\":1577,\n      \"name\":\"Кандидат наук\"\n    },{\n      \"x\":\"Среднее\",\n      \"y\":4194,\n      \"name\":\"Среднее\"\n    },{\n      \"x\":\"Бакалавр\",\n      \"y\":6260,\n      \"name\":\"Бакалавр\"\n    },{\n      \"x\":\"Магистр\",\n      \"y\":7279,\n      \"name\":\"Магистр\"\n    },{\n      \"x\":\"Среднее специальное\",\n      \"y\":14161,\n      \"name\":\"Среднее специальное\"\n    },{\n      \"x\":\"Неоконченное высшее\",\n      \"y\":20532,\n      \"name\":\"Неоконченное высшее\"\n    },{\n      \"x\":\"Высшее\",\n      \"y\":101560,\n      \"name\":\"Высшее\"\n    }]\n  }],\n  \"title\":{\n    \"text\":\"Уровень образования\"\n  },\n  \"chart\":{\n    \"type\":\"pie\"\n  }\n}\n\n$(\"#highcharts_fb9765d1-cd2b-4437-a21f-9bd920c530c5\").highcharts(data)\n});\n</script>\n"},"dateCreated":"2016-12-16T04:11:16+0400","dateStarted":"2016-12-16T04:11:23+0400","dateFinished":"2016-12-16T04:11:23+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:193"},{"text":"\nval total = spark.sql(\"SELECT COUNT(*) as count,'меньше года' as id FROM rdd WHERE total_experience.months < 13 union all ((SELECT COUNT(*) as count,'от 1 до 3 лет' as id FROM rdd WHERE total_experience.months > 12 AND total_experience.months < 37)  union all ((SELECT COUNT(*) as count,'от 3 до 6 лет' as id FROM rdd WHERE total_experience.months > 38 AND total_experience.months < 75) union all (SELECT COUNT(*) as count,'более 6 лет' as id FROM rdd WHERE total_experience.months > 75)))\")\ntotal.show()\n\nval title = Title(\"\")\ntitle.fields += net.liftweb.json.JsonAST.JField(\"text\", JsonConversion.toJValue(\"Опыт работы\"))\nval g = highcharts(total\n  .series(\"x\" -> \"id\", \"y\" -> \"count\",\"name\"->\"id\")\n  .orderBy(col(\"count\")))\n  .chart(Chart.pie)\n  .title(title.asInstanceOf[Title])\n g.show()","dateUpdated":"2016-12-16T04:27:42+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481847318184_2079148979","id":"20161216-041518_522011735","result":{"code":"ERROR","type":"TEXT","msg":"\ntotal: org.apache.spark.sql.DataFrame = [count: bigint, id: string]\n+-----+-------------+\n|count|           id|\n+-----+-------------+\n| 7385|  меньше года|\n|20995|от 1 до 3 лет|\n|31522|от 3 до 6 лет|\n|92351|  более 6 лет|\n+-----+-------------+\n\n\ntitle: com.knockdata.spark.highcharts.model.Title = com.knockdata.spark.highcharts.model.Title@5cffd74c\n\nres69: title.fields.type = ListBuffer(JField(text,JString(Опыт работы)))\n\ng: com.knockdata.spark.highcharts.model.Highcharts = com.knockdata.spark.highcharts.model.Highcharts@383456fb\n\n\n\n<console>:41: error: value show is not a member of com.knockdata.spark.highcharts.model.Highcharts\n               g.show()\n                 ^\n"},"dateCreated":"2016-12-16T04:15:18+0400","dateStarted":"2016-12-16T04:27:42+0400","dateFinished":"2016-12-16T04:28:20+0400","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:194"},{"text":"g.plot()","dateUpdated":"2016-12-16T04:28:54+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481848126935_730446203","id":"20161216-042846_924253461","result":{"code":"SUCCESS","type":"ANGULAR","msg":"\n<div id=\"highcharts_0816b072-06c0-4d52-9cd4-cd0478bca9a0\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\n\n<script type=\"text/javascript\">\n$(function () {\nvar data = {\n  \"series\":[{\n    \"data\":[{\n      \"x\":\"меньше года\",\n      \"y\":7385,\n      \"name\":\"меньше года\"\n    },{\n      \"x\":\"от 1 до 3 лет\",\n      \"y\":20995,\n      \"name\":\"от 1 до 3 лет\"\n    },{\n      \"x\":\"от 3 до 6 лет\",\n      \"y\":31522,\n      \"name\":\"от 3 до 6 лет\"\n    },{\n      \"x\":\"более 6 лет\",\n      \"y\":92351,\n      \"name\":\"более 6 лет\"\n    }]\n  }],\n  \"title\":{\n    \"text\":\"Опыт работы\"\n  },\n  \"chart\":{\n    \"type\":\"pie\"\n  }\n}\n\n$(\"#highcharts_0816b072-06c0-4d52-9cd4-cd0478bca9a0\").highcharts(data)\n});\n</script>\n"},"dateCreated":"2016-12-16T04:28:46+0400","dateStarted":"2016-12-16T04:28:54+0400","dateFinished":"2016-12-16T04:28:55+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:195"},{"text":"val relocation  = rdd.groupBy(\"relocation.type.id\").agg(count(\"*\").alias(\"total\"),first(col(\"relocation.type.name\")).alias(\"name\"))\n//val relocation = Seq( (\"no_relocation\",5,\"хочу переехать\"), (\"relocation_desirable \",2,\"не готов к переезду\") ).toDF(\"id\", \"total\",\"name\")\nrelocation.show()\nval title = Title(\"\") \ntitle.fields += net.liftweb.json.JsonAST.JField(\"text\", JsonConversion.toJValue(\"Готовность к переезду\"))\nval relocationGraph = highcharts(relocation.series(\"x\" -> \"id\", \"y\" -> \"total\",\"name\"->\"name\")\n   .orderBy(col(\"total\")))\n   .chart(Chart.pie)\n   .title(title)","dateUpdated":"2016-12-16T03:49:19+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false,"tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481555980719_-12277098","id":"20161212-191940_1859515972","result":{"code":"SUCCESS","type":"TEXT","msg":"\nrelocation: org.apache.spark.sql.DataFrame = [id: string, total: bigint ... 1 more field]\n+--------------------+-----+-------------------+\n|                  id|total|               name|\n+--------------------+-----+-------------------+\n|       no_relocation|92104|не готов к переезду|\n|relocation_desirable| 5954|     хочу переехать|\n| relocation_possible|57564|   готов к переезду|\n+--------------------+-----+-------------------+\n\n\ntitle: com.knockdata.spark.highcharts.model.Title = com.knockdata.spark.highcharts.model.Title@12b72b85\n\nres32: title.fields.type = ListBuffer(JField(text,JString(Готовность к переезду)))\n\nrelocationGraph: com.knockdata.spark.highcharts.model.Highcharts = com.knockdata.spark.highcharts.model.Highcharts@fa6efa3\n"},"dateCreated":"2016-12-12T07:19:40+0400","dateStarted":"2016-12-16T03:49:19+0400","dateFinished":"2016-12-16T03:49:46+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:196"},{"text":"val totalExp = rdd.select(\"total_experience.months\")\ntotalExp.createOrReplaceTempView(\"totalExp\")\n\nval texp = spark.sql(\"SELECT 'Меньше года' as exp, count(months) FROM totalExp WHERE months > 0 AND months < 13 union all (SELECT 'от 1 до 3 лет' as exp, count(months) FROM totalExp WHERE months > 12 AND months < 37 union all (SELECT 'от 3 до 6 лет' as exp, count(months) FROM totalExp WHERE months > 36 AND months < 75 union all (SELECT 'более 6 лет' as exp, count(months) FROM totalExp WHERE months > 75)))\")\ntexp.show()","dateUpdated":"2016-12-12T10:20:29+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481563319559_2008971017","id":"20161212-212159_1013628439","result":{"code":"SUCCESS","type":"TEXT","msg":"\ntotalExp: org.apache.spark.sql.DataFrame = [months: int]\n\ntexp: org.apache.spark.sql.DataFrame = [exp: string, count(months): bigint]\n+-------------+-------------+\n|          exp|count(months)|\n+-------------+-------------+\n|  Меньше года|         4740|\n|от 1 до 3 лет|        13849|\n|от 3 до 6 лет|        22105|\n|  более 6 лет|        65748|\n+-------------+-------------+\n\n"},"dateCreated":"2016-12-12T09:21:59+0400","dateStarted":"2016-12-12T10:20:29+0400","dateFinished":"2016-12-12T10:24:41+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:197"},{"text":"g.plot()","dateUpdated":"2016-12-16T03:54:28+0400","config":{"colWidth":4,"graph":{"mode":"pieChart","height":389,"optionOpen":false,"keys":[{"name":"id","index":0,"aggr":"sum"}],"values":[{"name":"count","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"id","index":0,"aggr":"sum"},"yAxis":{"name":"count","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481329757869_912689505","id":"20161210-042917_88294518","result":{"code":"SUCCESS","type":"ANGULAR","msg":"\n<div id=\"highcharts_5ca89022-a908-4d1e-8b16-9cd61f61beb3\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\n\n<script type=\"text/javascript\">\n$(function () {\nvar data = {\n  \"series\":[{\n    \"data\":[{\n      \"x\":\"Женский\",\n      \"y\":19311,\n      \"name\":\"Женский\"\n    },{\n      \"x\":\"Мужской\",\n      \"y\":125388,\n      \"name\":\"Мужской\"\n    }]\n  }],\n  \"title\":{\n    \"text\":\"Гендерное соотношение\"\n  },\n  \"chart\":{\n    \"type\":\"pie\"\n  }\n}\n\n$(\"#highcharts_5ca89022-a908-4d1e-8b16-9cd61f61beb3\").highcharts(data)\n});\n</script>\n"},"dateCreated":"2016-12-10T04:29:17+0400","dateStarted":"2016-12-16T02:44:34+0400","dateFinished":"2016-12-16T02:44:35+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:198"},{"text":"\nval title = Title(\"\")\ntitle.fields += net.liftweb.json.JsonAST.JField(\"text\", JsonConversion.toJValue(\"Возраст соискателей\"))\nval chartAgeGender = highcharts(genderDataAge.seriesCol(\"id\").series(\"y\"->\"count\"))\n   .chart(Chart.column)\n   .plotOptions(PlotOptions.column)\n   .xAxis(XAxis(\"\").categories(List(\"менее 22\",\"от 22 до 25\",\"от 26 до 35\",\"от 36 до 45\",\"от 46 до 55\",\"более 55\")))\n   .title(title)\n\n chartAgeGender.plot()","dateUpdated":"2016-12-16T03:54:41+0400","config":{"colWidth":8,"graph":{"mode":"table","height":389,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481555902070_-599543482","id":"20161212-191822_1212761369","result":{"code":"SUCCESS","type":"ANGULAR","msg":"\n<div id=\"highcharts_fa4f3200-69db-44dc-8e84-7a15c1d5d145\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\n\n<script type=\"text/javascript\">\n$(function () {\nvar data = {\n  \"series\":[{\n    \"id\":\"id=Женский\",\n    \"name\":\"Женский\",\n    \"data\":[{\n      \"y\":527\n    },{\n      \"y\":4509\n    },{\n      \"y\":9227\n    },{\n      \"y\":3462\n    },{\n      \"y\":1204\n    },{\n      \"y\":380\n    }]\n  },{\n    \"id\":\"id=Мужской\",\n    \"name\":\"Мужской\",\n    \"data\":[{\n      \"y\":2815\n    },{\n      \"y\":23307\n    },{\n      \"y\":60592\n    },{\n      \"y\":27616\n    },{\n      \"y\":8102\n    },{\n      \"y\":2956\n    }]\n  }],\n  \"xAxis\":{\n    \"categories\":[\"менее 22\",\"от 22 до 25\",\"от 26 до 35\",\"от 36 до 45\",\"от 46 до 55\",\"более 55\"]\n  },\n  \"title\":{\n    \"text\":\"Возраст соискателей\"\n  },\n  \"chart\":{\n    \"type\":\"column\"\n  },\n  \"plotOptions\":{\n    \"column\":{\n      \n    }\n  }\n}\n\n$(\"#highcharts_fa4f3200-69db-44dc-8e84-7a15c1d5d145\").highcharts(data)\n});\n</script>\n"},"dateCreated":"2016-12-12T07:18:22+0400","dateStarted":"2016-12-16T03:50:20+0400","dateFinished":"2016-12-16T03:51:52+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:199"},{"text":"relocationGraph.plot()","dateUpdated":"2016-12-16T04:31:40+0400","config":{"colWidth":7,"graph":{"mode":"table","height":389,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481555899446_-1168202356","id":"20161212-191819_2123219649","result":{"code":"SUCCESS","type":"ANGULAR","msg":"\n<div id=\"highcharts_124b635b-194f-4c1a-ba83-55f61bfc7cbf\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\n\n<script type=\"text/javascript\">\n$(function () {\nvar data = {\n  \"series\":[{\n    \"data\":[{\n      \"x\":\"relocation_desirable\",\n      \"y\":5954,\n      \"name\":\"хочу переехать\"\n    },{\n      \"x\":\"relocation_possible\",\n      \"y\":57564,\n      \"name\":\"готов к переезду\"\n    },{\n      \"x\":\"no_relocation\",\n      \"y\":92104,\n      \"name\":\"не готов к переезду\"\n    }]\n  }],\n  \"title\":{\n    \"text\":\"Готовность к переезду\"\n  },\n  \"chart\":{\n    \"type\":\"pie\"\n  }\n}\n\n$(\"#highcharts_124b635b-194f-4c1a-ba83-55f61bfc7cbf\").highcharts(data)\n});\n</script>\n"},"dateCreated":"2016-12-12T07:18:19+0400","dateStarted":"2016-12-16T04:31:40+0400","dateFinished":"2016-12-16T04:31:41+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:200"},{"text":"val k  = rdd.select(\"specialization\")\nval p = k.withColumn(\"specialization\", explode($\"specialization\"))\n  .select($\"specialization.name\" as \"name\", $\"specialization.id\" as \"id\")\nval specialization = p.groupBy(\"id\").agg(count(\"*\").alias(\"total\"),first(col(\"name\")).alias(\"name\")).sort(desc(\"total\")).limit(14)\nspecialization.show()\n\n","dateUpdated":"2016-12-17T00:41:54+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481404680917_-1578066100","id":"20161211-011800_673194570","result":{"code":"SUCCESS","type":"TEXT","msg":"\nk: org.apache.spark.sql.DataFrame = [specialization: array<struct<profarea_id:string,profarea_name:string,id:string,laboring:boolean,name:string>>]\n\np: org.apache.spark.sql.DataFrame = [name: string, id: string]\n\nspecialization: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [id: string, total: bigint ... 1 more field]\n+-----+-----+--------------------+\n|   id|total|                name|\n+-----+-----+--------------------+\n|1.273|41312|Системный админис...|\n|1.221|36018|Программирование,...|\n| 1.82|30092|             Инженер|\n|1.270|27037|  Сетевые технологии|\n| 1.89|26581|            Интернет|\n|1.327|24721|Управление проектами|\n|1.295|20118|    Телекоммуникации|\n|1.211|17152| Поддержка, Helpdesk|\n|1.203|11206|Передача данных и...|\n|  1.3|10732|CTO, CIO, Директо...|\n| 1.10|10646|          Web мастер|\n|1.225| 9527|             Продажи|\n| 1.25| 9419|            Аналитик|\n|1.272| 9076|Системная интеграция|\n+-----+-----+--------------------+\n\n"},"dateCreated":"2016-12-11T01:18:00+0400","dateStarted":"2016-12-17T00:41:55+0400","dateFinished":"2016-12-17T00:42:15+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:201"},{"text":"import scala.collection.mutable.ListBuffer\n\nvar list = new ListBuffer[String]()\n\nval dataFrame = specialization//Seq( (\"Male\",5), (\"Female\",2) ).toDF(\"name\", \"total\")\n\nval cats = dataFrame.select(\"name\").rdd.map(r => r(0)).collect()\nfor(i <- 0 until cats.length){\n    list += cats(i).toString\n}\n\nval l = list.toList\n\nval chart = highcharts(dataFrame.series(\"y\" -> \"total\",\"name\"->\"name\"))\n   .chart(Chart.bar)\n   .plotOptions(PlotOptions.column)\n   .xAxis(XAxis(\"\").categories(l))\n\n chart.plot()","dateUpdated":"2016-12-17T00:42:19+0400","config":{"colWidth":7,"graph":{"mode":"table","height":389,"optionOpen":false,"keys":[{"name":"id","index":0,"aggr":"sum"}],"values":[{"name":"count","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"id","index":0,"aggr":"sum"},"yAxis":{"name":"count","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481406007045_-1616068706","id":"20161211-014007_408866092","result":{"code":"SUCCESS","type":"ANGULAR","msg":"\n<div id=\"highcharts_7bbae34a-acc0-4367-9f65-f8ba3f182f14\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\n\n<script type=\"text/javascript\">\n$(function () {\nvar data = {\n  \"series\":[{\n    \"data\":[{\n      \"y\":41312,\n      \"name\":\"Системный администратор\"\n    },{\n      \"y\":36018,\n      \"name\":\"Программирование, Разработка\"\n    },{\n      \"y\":30092,\n      \"name\":\"Инженер\"\n    },{\n      \"y\":27037,\n      \"name\":\"Сетевые технологии\"\n    },{\n      \"y\":26581,\n      \"name\":\"Интернет\"\n    },{\n      \"y\":24721,\n      \"name\":\"Управление проектами\"\n    },{\n      \"y\":20118,\n      \"name\":\"Телекоммуникации\"\n    },{\n      \"y\":17152,\n      \"name\":\"Поддержка, Helpdesk\"\n    },{\n      \"y\":11206,\n      \"name\":\"Передача данных и доступ в интернет\"\n    },{\n      \"y\":10732,\n      \"name\":\"CTO, CIO, Директор по IT\"\n    },{\n      \"y\":10646,\n      \"name\":\"Web мастер\"\n    },{\n      \"y\":9527,\n      \"name\":\"Продажи\"\n    },{\n      \"y\":9419,\n      \"name\":\"Аналитик\"\n    },{\n      \"y\":9076,\n      \"name\":\"Системная интеграция\"\n    }]\n  }],\n  \"xAxis\":{\n    \"categories\":[\"Системный администратор\",\"Программирование, Разработка\",\"Инженер\",\"Сетевые технологии\",\"Интернет\",\"Управление проектами\",\"Телекоммуникации\",\"Поддержка, Helpdesk\",\"Передача данных и доступ в интернет\",\"CTO, CIO, Директор по IT\",\"Web мастер\",\"Продажи\",\"Аналитик\",\"Системная интеграция\"]\n  },\n  \"chart\":{\n    \"type\":\"bar\"\n  },\n  \"plotOptions\":{\n    \"column\":{\n      \n    }\n  }\n}\n\n$(\"#highcharts_7bbae34a-acc0-4367-9f65-f8ba3f182f14\").highcharts(data)\n});\n</script>\n"},"dateCreated":"2016-12-11T01:40:07+0400","dateStarted":"2016-12-17T00:42:19+0400","dateFinished":"2016-12-17T00:42:51+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:202"},{"text":"rdd.createOrReplaceTempView(\"table\")\nval spbSalary = spark.sql(\"SELECT id,salary.amount,salary.currency,specialization.id as spec,specialization.name as specName,total_experience.months as months  FROM table WHERE area.id = 2\")\nspbSalary.show()\nspbSalary.createOrReplaceTempView(\"spbSalary\")\n\n// val mskSalary = spark.sql(\"SELECT id,salary.amount,salary.currency,specialization.id as spec,specialization.name as specName,total_experience.months as months  FROM table WHERE area.id = 1\")\n// mskSalary.createOrReplaceTempView(\"mskSalary\")\n// val avgMskSalary = spark.sql(\"SELECT '1.221' as spec,AVG(amount),'от 1 до 3 лет' as exp FROM mskSalary WHERE array_contains(spec,'1.221') AND currency = 'RUR' AND amount > 0 AND months > 12 AND months < 37  union all ((SELECT '1.227' as spec,AVG(amount),'от 3 до 6 лет' as exp FROM mskSalary WHERE array_contains(spec,'1.272') AND currency = 'RUR' AND months > 38 AND months < 75) union all (SELECT '1.30' as spec,AVG(amount),'более 6 лет' as exp FROM mskSalary WHERE array_contains(spec,'1.30') AND currency = 'RUR' AND months > 75))\")\n// avgMskSalary.show()\n","dateUpdated":"2016-12-17T01:14:43+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481406052481_1601848501","id":"20161211-014052_1790267571","result":{"code":"SUCCESS","type":"TEXT","msg":"\nspbSalary: org.apache.spark.sql.DataFrame = [id: string, amount: int ... 4 more fields]\n+--------------------+------+--------+--------------------+--------------------+------+\n|                  id|amount|currency|                spec|            specName|months|\n+--------------------+------+--------+--------------------+--------------------+------+\n|b99407d6000085cd5...| 90000|     RUR|      [1.475, 1.221]|[Игровое ПО, Прог...|   175|\n|e063457400022ead2...|130000|     RUR|       [1.221, 1.82]|[Программирование...|   305|\n|4936275b00002f21e...|100000|     RUR|[1.221, 1.272, 1.82]|[Программирование...|   134|\n|f9fb0bfb00020cae2...|100000|     RUR|[1.221, 1.273, 1....|[Программирование...|   246|\n|591187b7000371f18...|100000|     RUR|[1.221, 1.327, 1....|[Программирование...|   187|\n|a53cfdd300006a300...| 90000|     RUR|[1.221, 1.82, 1.327]|[Программирование...|   102|\n|ab74add5000298495...| 90000|     RUR|[1.221, 1.82, 1.420]|[Программирование...|    83|\n|b7a8e6b300036e1c5...|100000|     RUR|[1.221, 1.117, 1.25]|[Программирование...|   305|\n|81a4bd7d0000e120c...|100000|     RUR|[1.221, 1.50, 1.327]|[Программирование...|   101|\n|575bc41200020b6a7...| 95000|     RUR|      [1.475, 1.221]|[Игровое ПО, Прог...|   156|\n|e3b889b200035f709...| 99990|     RUR|       [1.221, 1.82]|[Программирование...|   166|\n|ef59c6f3000376668...| 85000|     RUR|             [1.221]|[Программирование...|   209|\n|3fe12060000037430...|110000|     RUR|[1.221, 1.270, 1....|[Программирование...|   175|\n|93dbfbb2000371f2f...|  2000|     USD|[1.221, 1.327, 1....|[Software Develop...|   187|\n|4a383a590002dcdea...|  2600|     USD|[1.30, 1.327, 1.474]|[Арт-директор, Уп...|    56|\n|b1cc4d5500020af6e...|  1200|     USD|       [1.475, 1.30]|[Игровое ПО, Арт-...|    61|\n|e5899f370000e3d13...|  null|    null|  [1.30, 1.89, 1.10]|[Арт-директор, Ин...|    71|\n|b707ebe30000174de...|  null|    null|        [1.30, 1.89]|[Арт-директор, Ин...|    71|\n|ef836f020001cecea...|  null|    null|       [1.30, 1.161]|[Арт-директор, Му...|    41|\n|87107d75000185167...|  null|    null|[1.30, 1.246, 1.474]|[Арт-директор, Ра...|    63|\n+--------------------+------+--------+--------------------+--------------------+------+\nonly showing top 20 rows\n\n"},"dateCreated":"2016-12-11T01:40:52+0400","dateStarted":"2016-12-17T01:14:43+0400","dateFinished":"2016-12-17T01:14:48+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:203"},{"text":"\nval total221 = spark.sql(\"(SELECT 'Программирование' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.221') AND currency = 'RUR' AND amount > 0 AND months < 13) union all((SELECT 'Программирование' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.221') AND currency = 'RUR' AND amount > 0 AND months > 12 AND months < 37)  union all ((SELECT 'Программирование' as spec,AVG(amount) as amount,'от 3 до 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.221') AND currency = 'RUR' AND months > 38 AND months < 75) union all (SELECT 'Программирование' as spec,AVG(amount) as amount,'более 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.221') AND currency = 'RUR' AND months > 75)))\")\ntotal221.createOrReplaceTempView(\"total221\")\n\nval total1273 = spark.sql(\"(SELECT 'Системный администратор' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.273') AND currency = 'RUR' AND amount > 0 AND months < 13) union all((SELECT 'Системный администратор' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.273') AND currency = 'RUR' AND amount > 0 AND months > 12 AND months < 37)  union all ((SELECT 'Системный администратор' as spec,AVG(amount) as amount,'от 3 до 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.273') AND currency = 'RUR' AND months > 38 AND months < 75) union all (SELECT 'Системный администратор' as spec,AVG(amount) as amount,'более 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.273') AND currency = 'RUR' AND months > 75)))\")\ntotal1273.createOrReplaceTempView(\"total1273\")\n\nval total182 = spark.sql(\"(SELECT 'Инженер' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.82') AND currency = 'RUR' AND amount > 0 AND months < 13) union all((SELECT 'Инженер' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.82') AND currency = 'RUR' AND amount > 0 AND months > 12 AND months < 37)  union all ((SELECT 'Инженер' as spec,AVG(amount) as amount,'от 3 до 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.82') AND currency = 'RUR' AND months > 38 AND months < 75) union all (SELECT 'Инженер' as spec,AVG(amount) as amount,'более 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.82') AND currency = 'RUR' AND months > 75)))\")\ntotal182.createOrReplaceTempView(\"total182\")\n\nval total1270 = spark.sql(\"(SELECT 'Сетевые технологии' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.270') AND currency = 'RUR' AND amount > 0 AND months < 13) union all((SELECT 'Сетевые технологии' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.270') AND currency = 'RUR' AND amount > 0 AND months > 12 AND months < 37)  union all ((SELECT 'Сетевые технологии' as spec,AVG(amount) as amount,'от 3 до 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.270') AND currency = 'RUR' AND months > 38 AND months < 75) union all (SELECT 'Сетевые технологии' as spec,AVG(amount) as amount,'более 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.270') AND currency = 'RUR' AND months > 75)))\")\ntotal1270.createOrReplaceTempView(\"total1270\")\n\nval total125 = spark.sql(\"(SELECT 'Аналитик' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.25') AND currency = 'RUR' AND amount > 0 AND months < 13) union all((SELECT 'Аналитик' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.25') AND currency = 'RUR' AND amount > 0 AND months > 12 AND months < 37)  union all ((SELECT 'Аналитик' as spec,AVG(amount) as amount,'от 3 до 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.25') AND currency = 'RUR' AND months > 38 AND months < 75) union all (SELECT 'Аналитик' as spec,AVG(amount) as amount,'более 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.25') AND currency = 'RUR' AND months > 75)))\")\ntotal125.createOrReplaceTempView(\"total125\")\n\nvar unionTotal = spark.sql(\"SELECT * FROM total221 union all ((SELECT * FROM total1273) union all (((SELECT * FROM total182) union all  (((SELECT * FROM total1270) union all ((SELECT * FROM total125)))))))\")\n\nunionTotal.show()","dateUpdated":"2016-12-17T01:39:06+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481667690522_1579360949","id":"20161214-022130_758979089","result":{"code":"SUCCESS","type":"TEXT","msg":"\ntotal221: org.apache.spark.sql.DataFrame = [spec: string, amount: double ... 1 more field]\n\ntotal1273: org.apache.spark.sql.DataFrame = [spec: string, amount: double ... 1 more field]\n\ntotal182: org.apache.spark.sql.DataFrame = [spec: string, amount: double ... 1 more field]\n\ntotal1270: org.apache.spark.sql.DataFrame = [spec: string, amount: double ... 1 more field]\n\ntotal125: org.apache.spark.sql.DataFrame = [spec: string, amount: double ... 1 more field]\n\nunionTotal: org.apache.spark.sql.DataFrame = [spec: string, amount: double ... 1 more field]\n+--------------------+------------------+-------------+\n|                spec|            amount|          exp|\n+--------------------+------------------+-------------+\n|    Программирование|29759.030837004404|от 1 до 3 лет|\n|    Программирование| 40814.96103896104|от 1 до 3 лет|\n|    Программирование| 54851.97273853779|от 3 до 6 лет|\n|    Программирование| 72781.10951893551|  более 6 лет|\n|Системный админис...|25047.011952191235|от 1 до 3 лет|\n|Системный админис...| 30671.12232030265|от 1 до 3 лет|\n|Системный админис...| 37162.60179372197|от 3 до 6 лет|\n|Системный админис...|45510.871703492514|  более 6 лет|\n|             Инженер| 28002.47524752475|от 1 до 3 лет|\n|             Инженер| 36515.17845117845|от 1 до 3 лет|\n|             Инженер| 43710.97072072072|от 3 до 6 лет|\n|             Инженер|52270.397366030884|  более 6 лет|\n|  Сетевые технологии|27590.909090909092|от 1 до 3 лет|\n|  Сетевые технологии| 33547.73577981651|от 1 до 3 лет|\n|  Сетевые технологии| 40687.05919395466|от 3 до 6 лет|\n|  Сетевые технологии|51014.617021276594|  более 6 лет|\n|            Аналитик| 33502.12765957447|от 1 до 3 лет|\n|            Аналитик| 37256.75675675676|от 1 до 3 лет|\n|            Аналитик| 47250.75392670157|от 3 до 6 лет|\n|            Аналитик| 70311.58526315789|  более 6 лет|\n+--------------------+------------------+-------------+\n\n"},"dateCreated":"2016-12-14T02:21:30+0400","dateStarted":"2016-12-17T01:39:06+0400","dateFinished":"2016-12-17T01:44:17+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:204"},{"text":"//val dataFrame = Seq( (\"1-3\",32,\"no\"),(\"1-3\",22,\"no\") ,(\"4-5\",29,\"divorced\"), (\"4-5\",17,\"divorced\") ).toDF(\"exp\", \"total\",\"marital\")\n//val dataFrame1 = Seq( (\"Male\",51,\"bbb\"), (\"Female\",22,\"bbb\") ).toDF(\"name\", \"total\",\"marital\")\n\nval chart = highcharts(unionTotal.seriesCol(\"spec\").series(\"y\"->\"amount\"))\n   .chart(Chart.column)\n   .plotOptions(PlotOptions.column)\n   .xAxis(XAxis(\"\").categories(List(\"менее 1\",\"от 1 до 3\",\"от 3 до 6\",\"более 6\")))\n\n chart.plot()","dateUpdated":"2016-12-17T06:06:51+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481667688847_-1363229288","id":"20161214-022128_1034935843","result":{"code":"SUCCESS","type":"ANGULAR","msg":"\n<div id=\"highcharts_85bf34cd-71d4-4089-b0a6-91963e972589\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\n\n<script type=\"text/javascript\">\n$(function () {\nvar data = {\n  \"series\":[{\n    \"id\":\"spec=Аналитик\",\n    \"name\":\"Аналитик\",\n    \"data\":[{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":33502.12765957447\n    },{\n      \"y\":37256.75675675676\n    },{\n      \"y\":47250.75392670157\n    },{\n      \"y\":70311.58526315789\n    }]\n  },{\n    \"id\":\"spec=Инженер\",\n    \"name\":\"Инженер\",\n    \"data\":[{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":28002.47524752475\n    },{\n      \"y\":36515.17845117845\n    },{\n      \"y\":43710.97072072072\n    },{\n      \"y\":52270.397366030884\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    }]\n  },{\n    \"id\":\"spec=Программирование\",\n    \"name\":\"Программирование\",\n    \"data\":[{\n      \"y\":29759.030837004404\n    },{\n      \"y\":40814.96103896104\n    },{\n      \"y\":54851.97273853779\n    },{\n      \"y\":72781.10951893551\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    }]\n  },{\n    \"id\":\"spec=Сетевые технологии\",\n    \"name\":\"Сетевые технологии\",\n    \"data\":[{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":27590.909090909092\n    },{\n      \"y\":33547.73577981651\n    },{\n      \"y\":40687.05919395466\n    },{\n      \"y\":51014.617021276594\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    }]\n  },{\n    \"id\":\"spec=Системный администратор\",\n    \"name\":\"Системный администратор\",\n    \"data\":[{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":25047.011952191235\n    },{\n      \"y\":30671.12232030265\n    },{\n      \"y\":37162.60179372197\n    },{\n      \"y\":45510.871703492514\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    }]\n  }],\n  \"xAxis\":{\n    \"categories\":[\"менее 1\",\"от 1 до 3\",\"от 3 до 6\",\"более 6\"]\n  },\n  \"chart\":{\n    \"type\":\"column\"\n  },\n  \"plotOptions\":{\n    \"column\":{\n      \n    }\n  }\n}\n\n$(\"#highcharts_85bf34cd-71d4-4089-b0a6-91963e972589\").highcharts(data)\n});\n</script>\n"},"dateCreated":"2016-12-14T02:21:28+0400","dateStarted":"2016-12-17T01:50:47+0400","dateFinished":"2016-12-17T02:01:58+0400","status":"PENDING","progressUpdateIntervalMs":500,"$$hashKey":"object:205","focus":true},{"text":"val educationPrimary  = rdd.select(\"education.primary\")\nval educationPrimaryWithColumn = educationPrimary.withColumn(\"primary\", explode($\"primary\"))\n  .select($\"primary.name\" as \"name\", $\"primary.name_id\" as \"id\")\n\nval educationGroupBy = educationPrimaryWithColumn.groupBy(\"id\").agg(count(\"*\").alias(\"total\"),first(col(\"name\")).alias(\"name\")).sort(desc(\"total\")).limit(10)\neducationGroupBy.createOrReplaceTempView(\"educationGroupBy\")\nval educationResult = spark.sql(\"SELECT * FROM educationGroupBy WHERE total < 80000\")\neducationResult.show()\n\nvar list = new ListBuffer[String]()\n\nval dataFrame = educationResult //Seq( (\"28391\",1434,\"Московский государственный университет\"), (\"1234\",1002,\"СПБГПУ\") ).toDF(\"id\",\"total\", \"name\")\n\nval cats = dataFrame.select(\"name\").rdd.map(r => r(0)).collect()\nfor(i <- 0 until cats.length){\n    list += cats(i).toString\n}\n\nval l = list.toList\n\nval chart = highcharts(dataFrame.series(\"y\" -> \"total\",\"name\"->\"name\"))\n   .chart(Chart.bar)\n   .plotOptions(PlotOptions.column)\n   .xAxis(XAxis(\"\").categories(l))\n\n chart.plot()\n","dateUpdated":"2016-12-17T06:06:47+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481408312999_-478291232","id":"20161211-021832_1337635634","result":{"code":"SUCCESS","type":"ANGULAR","msg":"\n<div id=\"highcharts_22512b05-3dc6-4acc-b5d3-daf8a232a0f2\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\n\n<script type=\"text/javascript\">\n$(function () {\nvar data = {\n  \"series\":[{\n    \"data\":[{\n      \"y\":1536,\n      \"name\":\"Санкт-Петербургский государственный политехнический университет, Санкт-Петербург\"\n    },{\n      \"y\":1516,\n      \"name\":\"Московский государственный технический университет им. Н.Э. Баумана, Москва\"\n    },{\n      \"y\":1458,\n      \"name\":\"Московский государственный университет им. М.В. Ломоносова, Москва\"\n    },{\n      \"y\":1387,\n      \"name\":\"Московский авиационный институт (национальный исследовательский университет), Москва\"\n    },{\n      \"y\":1365,\n      \"name\":\"Уральский федеральный университет имени первого Президента России Б.Н. Ельцина, Екатеринбург\"\n    },{\n      \"y\":1323,\n      \"name\":\"Санкт-Петербургский государственный университет телекоммуникаций им. проф. М.А. Бонч-Бруевича, Санкт-Петербург\"\n    },{\n      \"y\":1296,\n      \"name\":\"Московский технический университет связи и информатики, Москва\"\n    },{\n      \"y\":1222,\n      \"name\":\"Санкт-Петербургский национальный исследовательский университет информационных технологий, механики и оптики, Санкт-Петербург\"\n    },{\n      \"y\":1175,\n      \"name\":\"Московский государственный технический университет радиотехники, электроники и автоматики, Москва\"\n    },{\n      \"y\":1007,\n      \"name\":\"Сибирский государственный университет телекоммуникаций и информатики, Новосибирск\"\n    }]\n  }],\n  \"xAxis\":{\n    \"categories\":[\"Санкт-Петербургский государственный политехнический университет, Санкт-Петербург\",\"Московский государственный технический университет им. Н.Э. Баумана, Москва\",\"Московский государственный университет им. М.В. Ломоносова, Москва\",\"Московский авиационный институт (национальный исследовательский университет), Москва\",\"Уральский федеральный университет имени первого Президента России Б.Н. Ельцина, Екатеринбург\",\"Санкт-Петербургский государственный университет телекоммуникаций им. проф. М.А. Бонч-Бруевича, Санкт-Петербург\",\"Московский технический университет связи и информатики, Москва\",\"Санкт-Петербургский национальный исследовательский университет информационных технологий, механики и оптики, Санкт-Петербург\",\"Московский государственный технический университет радиотехники, электроники и автоматики, Москва\",\"Сибирский государственный университет телекоммуникаций и информатики, Новосибирск\"]\n  },\n  \"chart\":{\n    \"type\":\"bar\"\n  },\n  \"plotOptions\":{\n    \"column\":{\n      \n    }\n  }\n}\n\n$(\"#highcharts_22512b05-3dc6-4acc-b5d3-daf8a232a0f2\").highcharts(data)\n});\n</script>\n"},"dateCreated":"2016-12-11T02:18:32+0400","dateStarted":"2016-12-14T02:09:21+0400","dateFinished":"2016-12-14T02:14:41+0400","status":"PENDING","progressUpdateIntervalMs":500,"$$hashKey":"object:206","focus":true},{"text":"val educationPrimary  = rdd.select(\"education.primary\")\nval educationPrimaryWithColumn = educationPrimary.withColumn(\"primary\", explode($\"primary\"))\n  .select($\"primary.name\" as \"name\", $\"primary.name_id\" as \"id\")\neducationPrimaryWithColumn.createOrReplaceTempView(\"educationPrimaryWithColumn\")\nval ot = spark.sql(\"SELECT first(name) as name,id,COUNT(*) as count FROM educationPrimaryWithColumn GROUP BY id ORDER BY count DESC LIMIT 15\");\not.show()\n\nvar list = new ListBuffer[String]()\n\nval dataFrame = ot//Seq( (\"Male\",5), (\"Female\",2) ).toDF(\"name\", \"total\")\n\nval cats = dataFrame.select(\"name\").rdd.map(r => r(0)).collect()\nfor(i <- 0 until cats.length){\n    list += cats(i).toString\n}\n\nval l = list.toList\n\nval chart = highcharts(dataFrame.series(\"y\" -> \"count\",\"name\"->\"name\"))\n   .chart(Chart.bar)\n   .plotOptions(PlotOptions.column)\n   .xAxis(XAxis(\"\").categories(l))\n\n chart.plot()\n\n\n \n  \n//bauman.show()\n","dateUpdated":"2016-12-17T04:51:38+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":true,"keys":[{"name":"count(names)","index":0,"aggr":"sum"}],"values":[{"name":"names","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"count(names)","index":0,"aggr":"sum"},"yAxis":{"name":"names","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481466941897_1023874631","id":"20161211-183541_2072702807","result":{"code":"ERROR","type":"TEXT","msg":"\neducationPrimary: org.apache.spark.sql.DataFrame = [primary: array<struct<name:string,name_id:string,organization:string,organization_id:string,result:string,result_id:string,year:int>>]\n\neducationPrimaryWithColumn: org.apache.spark.sql.DataFrame = [name: string, id: string]\n\not: org.apache.spark.sql.DataFrame = [name: string, id: string ... 1 more field]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\norg.apache.spark.SparkException: Job 110 cancelled part of cancelled job group zeppelin-20161211-183541_2072702807\n  at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1450)\n  at org.apache.spark.scheduler.DAGScheduler.handleJobCancellation(DAGScheduler.scala:1389)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply$mcVI$sp(DAGScheduler.scala:795)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply(DAGScheduler.scala:795)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply(DAGScheduler.scala:795)\n  at scala.collection.mutable.HashSet.foreach(HashSet.scala:78)\n  at org.apache.spark.scheduler.DAGScheduler.handleJobGroupCancelled(DAGScheduler.scala:795)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1638)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1618)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1607)\n  at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)\n  at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:632)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:1871)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:1934)\n  at org.apache.spark.rdd.RDD$$anonfun$reduce$1.apply(RDD.scala:983)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)\n  at org.apache.spark.rdd.RDD.withScope(RDD.scala:358)\n  at org.apache.spark.rdd.RDD.reduce(RDD.scala:965)\n  at org.apache.spark.rdd.RDD$$anonfun$takeOrdered$1.apply(RDD.scala:1380)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)\n  at org.apache.spark.rdd.RDD.withScope(RDD.scala:358)\n  at org.apache.spark.rdd.RDD.takeOrdered(RDD.scala:1367)\n  at org.apache.spark.sql.execution.TakeOrderedAndProjectExec.executeCollect(limit.scala:128)\n  at org.apache.spark.sql.Dataset$$anonfun$org$apache$spark$sql$Dataset$$execute$1$1.apply(Dataset.scala:2183)\n  at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:57)\n  at org.apache.spark.sql.Dataset.withNewExecutionId(Dataset.scala:2532)\n  at org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$execute$1(Dataset.scala:2182)\n  at org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$collect(Dataset.scala:2189)\n  at org.apache.spark.sql.Dataset$$anonfun$head$1.apply(Dataset.scala:1925)\n  at org.apache.spark.sql.Dataset$$anonfun$head$1.apply(Dataset.scala:1924)\n  at org.apache.spark.sql.Dataset.withTypedCallback(Dataset.scala:2562)\n  at org.apache.spark.sql.Dataset.head(Dataset.scala:1924)\n  at org.apache.spark.sql.Dataset.take(Dataset.scala:2139)\n  at org.apache.spark.sql.Dataset.showString(Dataset.scala:239)\n  at org.apache.spark.sql.Dataset.show(Dataset.scala:526)\n  at org.apache.spark.sql.Dataset.show(Dataset.scala:486)\n  at org.apache.spark.sql.Dataset.show(Dataset.scala:495)\n  ... 56 elided\n"},"dateCreated":"2016-12-11T06:35:41+0400","dateStarted":"2016-12-17T04:50:54+0400","dateFinished":"2016-12-17T04:51:13+0400","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:207"},{"text":"  val spbstu = spark.sql(\"SELECT COUNT(*) FROM educationPrimaryWithColumn WHERE id = 39765 OR ( (name LIKE '%олитех%' AND name LIKE '%етербур%') OR name LIKE 'СПБГПУ' OR name LIKE 'СПБПУ')\")\n  spbstu.show()\n  val bauman = spark.sql(\"SELECT COUNT(*) FROM educationPrimaryWithColumn WHERE id = 38921 OR (name LIKE '%Бауман%')\")\n  bauman.show()\n  val mgu = spark.sql(\"SELECT COUNT(*) FROM educationPrimaryWithColumn WHERE id = 39144 OR (name LIKE 'Ломоносова%' OR name LIKE 'МГУ')\")\n  mgu.show()\n  val mfti = spark.sql(\"SELECT COUNT(*)  FROM educationPrimaryWithColumn WHERE name like 'МФТИ' OR (name LIKE '%Мос%' AND name LIKE '%физико-тех%')\");\n  mfti.show()\n  \n  val mai = spark.sql(\"SELECT COUNT(*)  FROM educationPrimaryWithColumn WHERE id = 39594 OR  name like 'МАИ' OR (name LIKE '%Мос%' AND name LIKE '%авиационн%')\");\n  mai.show()\n  \n  val spbtu = spark.sql(\"SELECT COUNT(*) FROM educationPrimaryWithColumn WHERE id = 39791 OR name LIKE 'Санкт-Петербургский государственный университет' OR name LIKE 'СПБГУ'\")\n  spbtu.show()\n \n  val itmo =  spark.sql(\"SELECT COUNT(*) FROM educationPrimaryWithColumn WHERE id = 39872 OR ( (name LIKE '%оптики%' AND name LIKE '%етербур%') OR name LIKE 'ИТМО')\") \n  itmo.show()\n  \n  val bonch =  spark.sql(\"SELECT COUNT(*) FROM educationPrimaryWithColumn WHERE id = 39692 OR ( (name LIKE '%телекоммуни%' AND name LIKE '%етербур%') OR name LIKE '%Бонч%')\") \n  bonch.show()","dateUpdated":"2016-12-17T04:55:42+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481935885428_1547214987","id":"20161217-045125_1316387350","result":{"code":"SUCCESS","type":"TEXT","msg":"\nspbstu: org.apache.spark.sql.DataFrame = [count(1): bigint]\n+--------+\n|count(1)|\n+--------+\n|    2085|\n+--------+\n\n\nbauman: org.apache.spark.sql.DataFrame = [count(1): bigint]\n+--------+\n|count(1)|\n+--------+\n|    3225|\n+--------+\n\n\nmgu: org.apache.spark.sql.DataFrame = [count(1): bigint]\n+--------+\n|count(1)|\n+--------+\n|    1716|\n+--------+\n\n\nmfti: org.apache.spark.sql.DataFrame = [count(1): bigint]\n+--------+\n|count(1)|\n+--------+\n|     670|\n+--------+\n\n\nmai: org.apache.spark.sql.DataFrame = [count(1): bigint]\n+--------+\n|count(1)|\n+--------+\n|    2223|\n+--------+\n\n\nspbtu: org.apache.spark.sql.DataFrame = [count(1): bigint]\n+--------+\n|count(1)|\n+--------+\n|    1120|\n+--------+\n\n\nitmo: org.apache.spark.sql.DataFrame = [count(1): bigint]\n+--------+\n|count(1)|\n+--------+\n|    1451|\n+--------+\n\n\nbonch: org.apache.spark.sql.DataFrame = [count(1): bigint]\n+--------+\n|count(1)|\n+--------+\n|    2383|\n+--------+\n\n"},"dateCreated":"2016-12-17T04:51:25+0400","dateStarted":"2016-12-17T04:55:42+0400","dateFinished":"2016-12-17T04:58:58+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:208"},{"text":"var list = new ListBuffer[String]()\n\nval dataFrame = Seq( (\"МГТУ\",3225), (\"МАИ\",2223),(\"МГУ\",1716),(\"МФТИ\",670),(\"СПБГУТ\",2383),(\"СПБПУ\",2085),(\"ИТМО\",1451),(\"СПБГУ\",1120) ).toDF(\"name\", \"total\")\n\nval cats = dataFrame.select(\"name\").rdd.map(r => r(0)).collect()\nfor(i <- 0 until cats.length){\n    list += cats(i).toString\n}\n\nval l = list.toList\n\nval chart = highcharts(dataFrame.series(\"y\" -> \"total\",\"name\"->\"name\"))\n   .chart(Chart.bar)\n   .plotOptions(PlotOptions.column)\n   .xAxis(XAxis(\"\").categories(l))\n\n chart.plot()","dateUpdated":"2016-12-17T06:06:37+0400","config":{"colWidth":7,"graph":{"mode":"table","height":389,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481936582640_2097569547","id":"20161217-050302_734391175","result":{"code":"SUCCESS","type":"ANGULAR","msg":"\n<div id=\"highcharts_e799517c-a68c-4227-a1f6-7abfe1abc4f4\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\n\n<script type=\"text/javascript\">\n$(function () {\nvar data = {\n  \"series\":[{\n    \"data\":[{\n      \"y\":3225,\n      \"name\":\"МГТУ\"\n    },{\n      \"y\":2223,\n      \"name\":\"МАИ\"\n    },{\n      \"y\":1716,\n      \"name\":\"МГУ\"\n    },{\n      \"y\":670,\n      \"name\":\"МФТИ\"\n    },{\n      \"y\":2383,\n      \"name\":\"СПБГУТ\"\n    },{\n      \"y\":2085,\n      \"name\":\"СПБПУ\"\n    },{\n      \"y\":1451,\n      \"name\":\"ИТМО\"\n    },{\n      \"y\":1120,\n      \"name\":\"СПБГУ\"\n    }]\n  }],\n  \"xAxis\":{\n    \"categories\":[\"МГТУ\",\"МАИ\",\"МГУ\",\"МФТИ\",\"СПБГУТ\",\"СПБПУ\",\"ИТМО\",\"СПБГУ\"]\n  },\n  \"chart\":{\n    \"type\":\"bar\"\n  },\n  \"plotOptions\":{\n    \"column\":{\n      \n    }\n  }\n}\n\n$(\"#highcharts_e799517c-a68c-4227-a1f6-7abfe1abc4f4\").highcharts(data)\n});\n</script>\n"},"dateCreated":"2016-12-17T05:03:02+0400","dateStarted":"2016-12-17T06:06:38+0400","dateFinished":"2016-12-17T05:12:52+0400","status":"PENDING","progressUpdateIntervalMs":500,"$$hashKey":"object:209","focus":true},{"text":"ot.show()","dateUpdated":"2016-12-17T04:32:23+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481934731423_-2103172542","id":"20161217-043211_925366186","result":{"code":"SUCCESS","type":"TEXT","msg":"+--------------------+-----+------+\n|                name|   id| count|\n+--------------------+-----+------+\n|Физико-Механическ...| null|121054|\n|Национальный техн...|46917|  1775|\n|Санкт-Петербургск...|39765|  1542|\n|Московский госуда...|38921|  1539|\n|Московский госуда...|39144|  1512|\n|Московский авиаци...|39594|  1392|\n|Уральский федерал...|43473|  1370|\n|Санкт-Петербургск...|39692|  1331|\n|Московский технич...|38931|  1307|\n|Санкт-Петербургск...|39872|  1229|\n|Московский госуда...|38929|  1178|\n|Сибирский государ...|40523|  1031|\n|Санкт-Петербургск...|39791|  1011|\n|Новосибирский гос...|40104|   988|\n|Московский госуда...|39043|   961|\n+--------------------+-----+------+\n\n"},"dateCreated":"2016-12-17T04:32:11+0400","dateStarted":"2016-12-17T04:32:23+0400","dateFinished":"2016-12-17T04:33:04+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:210"},{"text":"val mfti = spark.sql(\"SELECT * FROM educationPrimaryWithColumn WHERE name like 'МФТИ' OR (name LIKE '%Мос%' AND name LIKE '%физико-тех%')\");\not.count()\n","dateUpdated":"2016-12-17T04:41:38+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481934897839_-1042375497","id":"20161217-043457_1198418370","result":{"code":"SUCCESS","type":"TEXT","msg":"\not: org.apache.spark.sql.DataFrame = [name: string, id: string]\n\nres198: Long = 670\n"},"dateCreated":"2016-12-17T04:34:57+0400","dateStarted":"2016-12-17T04:40:30+0400","dateFinished":"2016-12-17T04:41:00+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:211"},{"text":"rdd.createOrReplaceTempView(\"table\")\nval spbSalary = spark.sql(\"SELECT id,salary.amount,salary.currency,specialization.id as spec,specialization.name as specName,total_experience.months as months  FROM table WHERE area.id = 1\")\nspbSalary.show()\nspbSalary.createOrReplaceTempView(\"spbSalary\")\n\nval total221 = spark.sql(\"(SELECT 'Программирование' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.221') AND currency = 'RUR' AND amount > 0 AND months < 13) union all((SELECT 'Программирование' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.221') AND currency = 'RUR' AND amount > 0 AND months > 12 AND months < 37)  union all ((SELECT 'Программирование' as spec,AVG(amount) as amount,'от 3 до 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.221') AND currency = 'RUR' AND months > 38 AND months < 75) union all (SELECT 'Программирование' as spec,AVG(amount) as amount,'более 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.221') AND currency = 'RUR' AND months > 75)))\")\ntotal221.createOrReplaceTempView(\"total221\")\n\nval total1273 = spark.sql(\"(SELECT 'Системный администратор' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.273') AND currency = 'RUR' AND amount > 0 AND months < 13) union all((SELECT 'Системный администратор' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.273') AND currency = 'RUR' AND amount > 0 AND months > 12 AND months < 37)  union all ((SELECT 'Системный администратор' as spec,AVG(amount) as amount,'от 3 до 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.273') AND currency = 'RUR' AND months > 38 AND months < 75) union all (SELECT 'Системный администратор' as spec,AVG(amount) as amount,'более 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.273') AND currency = 'RUR' AND months > 75)))\")\ntotal1273.createOrReplaceTempView(\"total1273\")\n\nval total182 = spark.sql(\"(SELECT 'Инженер' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.82') AND currency = 'RUR' AND amount > 0 AND months < 13) union all((SELECT 'Инженер' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.82') AND currency = 'RUR' AND amount > 0 AND months > 12 AND months < 37)  union all ((SELECT 'Инженер' as spec,AVG(amount) as amount,'от 3 до 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.82') AND currency = 'RUR' AND months > 38 AND months < 75) union all (SELECT 'Инженер' as spec,AVG(amount) as amount,'более 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.82') AND currency = 'RUR' AND months > 75)))\")\ntotal182.createOrReplaceTempView(\"total182\")\n\nval total1270 = spark.sql(\"(SELECT 'Сетевые технологии' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.270') AND currency = 'RUR' AND amount > 0 AND months < 13) union all((SELECT 'Сетевые технологии' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.270') AND currency = 'RUR' AND amount > 0 AND months > 12 AND months < 37)  union all ((SELECT 'Сетевые технологии' as spec,AVG(amount) as amount,'от 3 до 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.270') AND currency = 'RUR' AND months > 38 AND months < 75) union all (SELECT 'Сетевые технологии' as spec,AVG(amount) as amount,'более 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.270') AND currency = 'RUR' AND months > 75)))\")\ntotal1270.createOrReplaceTempView(\"total1270\")\n\nval total125 = spark.sql(\"(SELECT 'Аналитик' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.25') AND currency = 'RUR' AND amount > 0 AND months < 13) union all((SELECT 'Аналитик' as spec,AVG(amount) as amount,'от 1 до 3 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.25') AND currency = 'RUR' AND amount > 0 AND months > 12 AND months < 37)  union all ((SELECT 'Аналитик' as spec,AVG(amount) as amount,'от 3 до 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.25') AND currency = 'RUR' AND months > 38 AND months < 75) union all (SELECT 'Аналитик' as spec,AVG(amount) as amount,'более 6 лет' as exp FROM spbSalary WHERE array_contains(spec,'1.25') AND currency = 'RUR' AND months > 75)))\")\ntotal125.createOrReplaceTempView(\"total125\")\n\nvar unionTotal = spark.sql(\"SELECT * FROM total221 union all ((SELECT * FROM total1273) union all (((SELECT * FROM total182) union all  (((SELECT * FROM total1270) union all ((SELECT * FROM total125)))))))\")\n\nunionTotal.show()\n","dateUpdated":"2016-12-17T02:08:47+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481926011275_968344525","id":"20161217-020651_290760157","result":{"code":"SUCCESS","type":"TEXT","msg":"\nspbSalary: org.apache.spark.sql.DataFrame = [id: string, amount: int ... 4 more fields]\n+--------------------+------+--------+--------------------+--------------------+------+\n|                  id|amount|currency|                spec|            specName|months|\n+--------------------+------+--------+--------------------+--------------------+------+\n|dfa4301e00026d5c1...|120000|     RUR|[1.221, 1.82, 1.420]|[Программирование...|    89|\n|82260a2c00026d1d0...|110000|     RUR|[1.221, 1.270, 1....|[Программирование...|   177|\n|0254b03b000081345...|120000|     RUR|[1.221, 1.273, 1....|[Программирование...|   205|\n|94ebdbb1000146c32...|130000|     RUR|[1.221, 1.272, 1....|[Программирование...|   222|\n|6dac215700030a9bc...| 65000|     RUR| [1.30, 1.161, 1.89]|[Арт-директор, Му...|    52|\n|f0fef7b3000303fd1...| 60000|     RUR| [1.30, 1.327, 1.10]|[Арт-директор, Уп...|    36|\n|42440b6e00036c02e...|150000|     RUR|[1.30, 1.246, 1.327]|[Арт-директор, Ра...|    64|\n|952a78c70002488e2...| 50000|     RUR|[1.475, 1.30, 1.161]|[Игровое ПО, Арт-...|    44|\n|bf6fd2dc00035a555...|  null|    null|[1.327, 1.232, 1....|[Управление проек...|     9|\n|690a92bc00034e0d4...|  null|    null|[1.161, 1.295, 1....|[Мультимедиа, Тел...|     9|\n|1d22a4dd00020df1e...| 20000|     RUR|       [1.232, 1.89]|[Продюсер, Интернет]|     5|\n|629957a70001d8f9a...| 60000|     RUR|[1.30, 1.161, 1.232]|[Арт-директор, Му...|     5|\n|5f09d0430001f98cf...| 90000|     RUR|[1.161, 1.327, 1....|[Мультимедиа, Упр...|    10|\n|bde5f9ae0001b6c23...| 30000|     RUR|[1.161, 1.232, 1.89]|[Мультимедиа, Про...|    12|\n|543e22e5000362c6f...|  null|    null|[1.475, 1.327, 1....|[Игровое ПО, Упра...|    23|\n|a423dbdd00027ce96...| 25000|     RUR|       [1.232, 1.89]|[Producer, Internet]|    12|\n|96ff56920002b9495...|  null|    null|[1.295, 1.232, 1.25]|[Телекоммуникации...|    23|\n|9b0173280002b7108...|  null|    null|      [1.327, 1.232]|[Управление проек...|    13|\n|55ff56330003161c2...|  null|    null|             [1.232]|          [Продюсер]|    15|\n|5071094c00012c9c3...| 42000|     RUR|[1.232, 1.137, 1.10]|[Продюсер, Маркет...|    28|\n+--------------------+------+--------+--------------------+--------------------+------+\nonly showing top 20 rows\n\n\ntotal221: org.apache.spark.sql.DataFrame = [spec: string, amount: double ... 1 more field]\n\ntotal1273: org.apache.spark.sql.DataFrame = [spec: string, amount: double ... 1 more field]\n\ntotal182: org.apache.spark.sql.DataFrame = [spec: string, amount: double ... 1 more field]\n\ntotal1270: org.apache.spark.sql.DataFrame = [spec: string, amount: double ... 1 more field]\n\ntotal125: org.apache.spark.sql.DataFrame = [spec: string, amount: double ... 1 more field]\n\nunionTotal: org.apache.spark.sql.DataFrame = [spec: string, amount: double ... 1 more field]\n+--------------------+------------------+-------------+\n|                spec|            amount|          exp|\n+--------------------+------------------+-------------+\n|    Программирование| 35496.52830188679|от 1 до 3 лет|\n|    Программирование|49775.160320641284|от 1 до 3 лет|\n|    Программирование| 68365.37995674116|от 3 до 6 лет|\n|    Программирование| 96370.76220562895|  более 6 лет|\n|Системный админис...| 29829.36349206349|от 1 до 3 лет|\n|Системный админис...| 36163.48374864572|от 1 до 3 лет|\n|Системный админис...| 46744.46533923304|от 3 до 6 лет|\n|Системный админис...|59268.693789607096|  более 6 лет|\n|             Инженер| 34675.64766839378|от 1 до 3 лет|\n|             Инженер| 42388.67236024845|от 1 до 3 лет|\n|             Инженер| 51339.72386587771|от 3 до 6 лет|\n|             Инженер| 62428.29813333333|  более 6 лет|\n|  Сетевые технологии|31925.076452599387|от 1 до 3 лет|\n|  Сетевые технологии| 38766.72504378284|от 1 до 3 лет|\n|  Сетевые технологии|50017.611506849316|от 3 до 6 лет|\n|  Сетевые технологии|62763.556867375046|  более 6 лет|\n|            Аналитик|42369.333333333336|от 1 до 3 лет|\n|            Аналитик| 49930.92105263158|от 1 до 3 лет|\n|            Аналитик| 77495.08599508599|от 3 до 6 лет|\n|            Аналитик| 99639.15379403793|  более 6 лет|\n+--------------------+------------------+-------------+\n\n"},"dateCreated":"2016-12-17T02:06:51+0400","dateStarted":"2016-12-17T02:08:47+0400","dateFinished":"2016-12-17T02:15:45+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:212"},{"text":"val chart = highcharts(unionTotal.seriesCol(\"spec\").series(\"y\"->\"amount\"))\n   .chart(Chart.column)\n   .plotOptions(PlotOptions.column)\n   .xAxis(XAxis(\"\").categories(List(\"менее 1\",\"от 1 до 3\",\"от 3 до 6\",\"более 6\")))\n\n chart.plot()","dateUpdated":"2016-12-17T06:06:27+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481926074725_-459935337","id":"20161217-020754_1945592007","result":{"code":"SUCCESS","type":"ANGULAR","msg":"\n<div id=\"highcharts_a5e20f8a-83f2-4737-ba2d-8506b82b6c4f\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\n\n<script type=\"text/javascript\">\n$(function () {\nvar data = {\n  \"series\":[{\n    \"id\":\"spec=Аналитик\",\n    \"name\":\"Аналитик\",\n    \"data\":[{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":42369.333333333336\n    },{\n      \"y\":49930.92105263158\n    },{\n      \"y\":77495.08599508599\n    },{\n      \"y\":99639.15379403793\n    }]\n  },{\n    \"id\":\"spec=Инженер\",\n    \"name\":\"Инженер\",\n    \"data\":[{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":34675.64766839378\n    },{\n      \"y\":42388.67236024845\n    },{\n      \"y\":51339.72386587771\n    },{\n      \"y\":62428.29813333333\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    }]\n  },{\n    \"id\":\"spec=Программирование\",\n    \"name\":\"Программирование\",\n    \"data\":[{\n      \"y\":35496.52830188679\n    },{\n      \"y\":49775.160320641284\n    },{\n      \"y\":68365.37995674116\n    },{\n      \"y\":96370.76220562895\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    }]\n  },{\n    \"id\":\"spec=Сетевые технологии\",\n    \"name\":\"Сетевые технологии\",\n    \"data\":[{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":31925.076452599387\n    },{\n      \"y\":38766.72504378284\n    },{\n      \"y\":50017.611506849316\n    },{\n      \"y\":62763.556867375046\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    }]\n  },{\n    \"id\":\"spec=Системный администратор\",\n    \"name\":\"Системный администратор\",\n    \"data\":[{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":29829.36349206349\n    },{\n      \"y\":36163.48374864572\n    },{\n      \"y\":46744.46533923304\n    },{\n      \"y\":59268.693789607096\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    },{\n      \"y\":null\n    }]\n  }],\n  \"xAxis\":{\n    \"categories\":[\"менее 1\",\"от 1 до 3\",\"от 3 до 6\",\"более 6\"]\n  },\n  \"chart\":{\n    \"type\":\"column\"\n  },\n  \"plotOptions\":{\n    \"column\":{\n      \n    }\n  }\n}\n\n$(\"#highcharts_a5e20f8a-83f2-4737-ba2d-8506b82b6c4f\").highcharts(data)\n});\n</script>\n"},"dateCreated":"2016-12-17T02:07:54+0400","dateStarted":"2016-12-17T06:06:27+0400","dateFinished":"2016-12-17T02:31:02+0400","status":"RUNNING","progressUpdateIntervalMs":500,"$$hashKey":"object:213","focus":true},{"text":"rdd.createOrReplaceTempView(\"table\")\n\nval timeAndCount = spark.sql(\n    \"SELECT '11' as month, COUNT(id) FROM table WHERE created_at < '2016-12-01T00:00:00+0300' and created_at > '2016-11-01T00:00:00+0300' OR updated_at < '2016-12-01T00:00:00+0300' and updated_at > '2016-10-01T00:00:00+0300' union all \" +\n    \"SELECT '10' as month, COUNT(id) FROM table WHERE created_at < '2016-11-01T00:00:00+0300' and created_at > '2016-10-01T00:00:00+0300' OR updated_at < '2016-11-01T00:00:00+0300' and updated_at > '2016-9-01T00:00:00+0300'\")\ntimeAndCount.show()\n","dateUpdated":"2016-12-11T08:00:36+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481468060965_39462539","id":"20161211-185420_559668697","result":{"code":"SUCCESS","type":"TEXT","msg":"\ntimeAndCount: org.apache.spark.sql.DataFrame = [month: string, count(id): bigint]\n+-----+---------+\n|month|count(id)|\n+-----+---------+\n|   11|    15046|\n|   10|     1736|\n+-----+---------+\n\n"},"dateCreated":"2016-12-11T06:54:20+0400","dateStarted":"2016-12-11T07:55:10+0400","dateFinished":"2016-12-11T07:57:06+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:214"},{"text":"val k  = rdd.select(\"skill_set\")\nval p = k.withColumn(\"skill_set\", explode($\"skill_set\"))\n  .select($\"skill_set\" as \"skill\")\np.createOrReplaceTempView(\"p\")\nval k = spark.sql(\"SELECT * FROM p WHERE skill in ('JavaScript','SQL','Java','PHP','C','.NET','C#','C++','Ruby','Python','Obj-C','Perl') \")\nval lan = k.groupBy(\"skill\").agg(count(\"*\").alias(\"total\"),first(col(\"skill\")).alias(\"skill\")).sort(desc(\"total\")).limit(14)\nlan.show()","dateUpdated":"2016-12-17T02:45:32+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481474692764_1628544942","id":"20161211-204452_119422494","result":{"code":"SUCCESS","type":"TEXT","msg":"\nk: org.apache.spark.sql.DataFrame = [skill_set: array<string>]\n\np: org.apache.spark.sql.DataFrame = [skill: string]\n\nk: org.apache.spark.sql.DataFrame = [skill: string]\n\nlan: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [skill: string, total: bigint ... 1 more field]\n+----------+-----+----------+\n|     skill|total|     skill|\n+----------+-----+----------+\n|JavaScript| 8502|JavaScript|\n|       SQL| 7120|       SQL|\n|       PHP| 5722|       PHP|\n|      Java| 4075|      Java|\n|        C#| 3323|        C#|\n|       C++| 2982|       C++|\n|    Python| 2549|    Python|\n|      Perl|  590|      Perl|\n|      Ruby|  369|      Ruby|\n|         C|  157|         C|\n|      .NET|   87|      .NET|\n+----------+-----+----------+\n\n"},"dateCreated":"2016-12-11T08:44:52+0400","dateStarted":"2016-12-17T02:45:32+0400","dateFinished":"2016-12-17T02:45:53+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:215"},{"text":"val educationPrimary  = rdd.select(\"language\")\nval educationPrimaryWithColumn = educationPrimary.withColumn(\"language\", explode($\"language\"))\n  .select($\"language.name\" as \"name\", $\"language.id\" as \"id\", $\"language.level.id\" as \"l_id\")\neducationPrimaryWithColumn.createOrReplaceTempView(\"educationPrimaryWithColumn\")\nval q = spark.sql(\"SELECT * FROM educationPrimaryWithColumn WHERE l_id in ('basic','can_read','fluent','can_pass_interview') and id in ('eng','deu','fra','spa')\")\nq.show()\n val lang = q.groupBy(\"id\").agg(count(\"*\").alias(\"total\"),first(col(\"name\")).alias(\"name\")).sort(desc(\"total\"))\n lang.show()\n \n var list = new ListBuffer[String]()\n\nval dataFrame = lang// Seq( (\"МГТУ\",3225), (\"МАИ\",2223),(\"МГУ\",1716),(\"МФТИ\",670),(\"СПБГУТ\",2383),(\"СПБПУ\",2085),(\"ИТМО\",1451),(\"СПБГУ\",1120) ).toDF(\"name\", \"total\")\n\nval cats = dataFrame.select(\"name\").rdd.map(r => r(0)).collect()\nfor(i <- 0 until cats.length){\n    list += cats(i).toString\n}\n\nval l = list.toList\n\nval chart = highcharts(dataFrame.series(\"y\" -> \"total\",\"name\"->\"name\"))\n   .chart(Chart.column)\n   .plotOptions(PlotOptions.column)\n   .xAxis(XAxis(\"\").categories(l))\n\n","dateUpdated":"2016-12-17T05:52:17+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481927951667_2139910383","id":"20161217-023911_811657792","result":{"code":"SUCCESS","type":"TEXT","msg":"\neducationPrimary: org.apache.spark.sql.DataFrame = [language: array<struct<level:struct<id:string,name:string>,id:string,name:string>>]\n\neducationPrimaryWithColumn: org.apache.spark.sql.DataFrame = [name: string, id: string ... 1 more field]\n\nq: org.apache.spark.sql.DataFrame = [name: string, id: string ... 1 more field]\n+-----------+---+------------------+\n|       name| id|              l_id|\n+-----------+---+------------------+\n| Английский|eng|             basic|\n| Английский|eng|          can_read|\n|Французский|fra|             basic|\n| Английский|eng|          can_read|\n| Английский|eng|          can_read|\n| Английский|eng|          can_read|\n| Английский|eng|          can_read|\n| Английский|eng|          can_read|\n| Английский|eng|          can_read|\n| Английский|eng|can_pass_interview|\n| Английский|eng|            fluent|\n| Английский|eng|             basic|\n| Английский|eng|can_pass_interview|\n| Английский|eng|          can_read|\n| Английский|eng|          can_read|\n| Английский|eng|          can_read|\n| Английский|eng|          can_read|\n| Английский|eng|            fluent|\n| Английский|eng|          can_read|\n| Английский|eng|          can_read|\n+-----------+---+------------------+\nonly showing top 20 rows\n\n\nlang: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [id: string, total: bigint ... 1 more field]\n+---+------+-----------+\n| id| total|       name|\n+---+------+-----------+\n|eng|142704| Английский|\n|deu| 14087|   Немецкий|\n|fra|  6447|Французский|\n|spa|  2148|  Испанский|\n+---+------+-----------+\n\n\nlist: scala.collection.mutable.ListBuffer[String] = ListBuffer()\n\ndataFrame: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [id: string, total: bigint ... 1 more field]\n\ncats: Array[Any] = Array(Английский, Немецкий, Французский, Испанский)\n\nl: List[String] = List(Английский, Немецкий, Французский, Испанский)\n\nchart: com.knockdata.spark.highcharts.model.Highcharts = com.knockdata.spark.highcharts.model.Highcharts@46656b42\n"},"dateCreated":"2016-12-17T02:39:11+0400","dateStarted":"2016-12-17T05:52:18+0400","dateFinished":"2016-12-17T05:53:30+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:216"},{"text":"chart.plot()","dateUpdated":"2016-12-17T06:06:16+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481937402187_91851105","id":"20161217-051642_701404703","result":{"code":"SUCCESS","type":"ANGULAR","msg":"\n<div id=\"highcharts_5c472801-d238-43e1-b884-ac1a876e88a0\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\n\n<script type=\"text/javascript\">\n$(function () {\nvar data = {\n  \"series\":[{\n    \"data\":[{\n      \"y\":142704,\n      \"name\":\"Английский\"\n    },{\n      \"y\":14087,\n      \"name\":\"Немецкий\"\n    },{\n      \"y\":6447,\n      \"name\":\"Французский\"\n    },{\n      \"y\":2148,\n      \"name\":\"Испанский\"\n    }]\n  }],\n  \"xAxis\":{\n    \"categories\":[\"Английский\",\"Немецкий\",\"Французский\",\"Испанский\"]\n  },\n  \"chart\":{\n    \"type\":\"column\"\n  },\n  \"plotOptions\":{\n    \"column\":{\n      \n    }\n  }\n}\n\n$(\"#highcharts_5c472801-d238-43e1-b884-ac1a876e88a0\").highcharts(data)\n});\n</script>\n"},"dateCreated":"2016-12-17T05:16:42+0400","dateStarted":"2016-12-17T06:06:16+0400","dateFinished":"2016-12-17T06:06:17+0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:217","focus":true},{"text":"","dateUpdated":"2016-12-17T06:06:18+0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481939639571_486188603","id":"20161217-055359_145795171","dateCreated":"2016-12-17T05:53:59+0400","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:218","dateFinished":"2016-12-17T06:02:55+0400","dateStarted":"2016-12-17T06:01:54+0400","result":{"code":"ERROR","type":"TEXT","msg":"\neng: org.apache.spark.sql.DataFrame = [spec: string, amount: bigint]\n\ntotal1270: org.apache.spark.sql.DataFrame = [spec: string, amount: double ... 1 more field]\n\ntotal125: org.apache.spark.sql.DataFrame = [spec: string, amount: double ... 1 more field]\n\nunionTotal: org.apache.spark.sql.DataFrame = [spec: string, amount: double ... 1 more field]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\norg.apache.spark.SparkException: Job 150 cancelled part of cancelled job group zeppelin-20161217-055359_145795171\n  at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1450)\n  at org.apache.spark.scheduler.DAGScheduler.handleJobCancellation(DAGScheduler.scala:1389)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply$mcVI$sp(DAGScheduler.scala:795)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply(DAGScheduler.scala:795)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply(DAGScheduler.scala:795)\n  at scala.collection.mutable.HashSet.foreach(HashSet.scala:78)\n  at org.apache.spark.scheduler.DAGScheduler.handleJobGroupCancelled(DAGScheduler.scala:795)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1638)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1618)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1607)\n  at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)\n  at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:632)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:1871)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:1884)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:1897)\n  at org.apache.spark.sql.execution.SparkPlan.executeTake(SparkPlan.scala:347)\n  at org.apache.spark.sql.execution.CollectLimitExec.executeCollect(limit.scala:39)\n  at org.apache.spark.sql.Dataset$$anonfun$org$apache$spark$sql$Dataset$$execute$1$1.apply(Dataset.scala:2183)\n  at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:57)\n  at org.apache.spark.sql.Dataset.withNewExecutionId(Dataset.scala:2532)\n  at org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$execute$1(Dataset.scala:2182)\n  at org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$collect(Dataset.scala:2189)\n  at org.apache.spark.sql.Dataset$$anonfun$head$1.apply(Dataset.scala:1925)\n  at org.apache.spark.sql.Dataset$$anonfun$head$1.apply(Dataset.scala:1924)\n  at org.apache.spark.sql.Dataset.withTypedCallback(Dataset.scala:2562)\n  at org.apache.spark.sql.Dataset.head(Dataset.scala:1924)\n  at org.apache.spark.sql.Dataset.take(Dataset.scala:2139)\n  at org.apache.spark.sql.Dataset.showString(Dataset.scala:239)\n  at org.apache.spark.sql.Dataset.show(Dataset.scala:526)\n  at org.apache.spark.sql.Dataset.show(Dataset.scala:486)\n  at org.apache.spark.sql.Dataset.show(Dataset.scala:495)\n  ... 56 elided\n"},"focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1481940113791_-38313925","id":"20161217-060153_1329090526","dateCreated":"2016-12-17T06:01:53+0400","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2488","dateUpdated":"2016-12-17T06:02:05+0400","text":""}],"name":"HeadHunter","id":"2C2VVPURE","angularObjects":{"2C56RSWHB:shared_process":[],"2C66Z8AP4:shared_process":[],"2C3UMXK9Y:shared_process":[],"2C54TRRT3:shared_process":[],"2C4C9QDWC:shared_process":[],"2C3MY7M6R:shared_process":[],"2C4TZRXCE:shared_process":[],"2C4RBUT37:shared_process":[],"2C4DGX5CD:shared_process":[],"2C6ERS52D:shared_process":[],"2C3EM4V21:shared_process":[],"2C4M7BMZJ:shared_process":[],"2C3ASW746:shared_process":[],"2C3NYMMNY:shared_process":[],"2C5PBGJQR:shared_process":[],"2C2YQC2QW:shared_process":[],"2C4KZRXXJ:shared_process":[],"2C4UYBBZ8:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}